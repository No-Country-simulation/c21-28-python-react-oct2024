networks :
    c-21-28_network :
        driver: bridge
        name: c-21-28_network
        attachable: true
        external: false 
        enable_ipv6: false

configs:
  pgpass:
    content: postgres:5432:*:postgres:postgres
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "No Country Postgres 16",
        "Host": "postgres",
        "Port": 5432,
        "MaintenanceDB": "postgres",
        "Username": "postgres",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}

services:
 
  c-21-28.services:
    container_name: c-21-28.services
    hostname: services
    logging:
      options:
        max-size: 10m
        max-file: "3" 
    build: 
      context: ./src/back/services
      dockerfile: ../../../Dockerfile
      target: ar_dev_py_fastapi
    command: sh -c "tail -f /dev/null"
    restart: always
    ports:  
      - 8080:80
      - 9240:9240
      - 9245:9245
    networks:
      c-21-28_network: {}
    volumes:
      - ./src/back/services:/home/python/app
      - ./env/back/services:/home/python/app/venv 
      - ./.data/tmp:/tmp 
    env_file:
      - ./.env 
    depends_on:
      c-21-28.postgres:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./src/back/services
          target: /home/python/app
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.50"
          memory: 512M 
 
  c-21-28.django_api:
    container_name: c-21-28.django_api
    hostname: api
    logging:
      options:
        max-size: 10m
        max-file: "3" 
    build:
      context: ./src/back/api
      dockerfile: ../../../Dockerfile
      target: ar_dev_py_django
    command: sh -c "python3 manage.py migrate --noinput && python3 manage.py makemigrations --noinput && python manage.py runserver 0.0.0.0:8000"
    restart: always
    ports: 
      #- ${API_PORT}:${API_PORT_OUT}/tcp
      - 8000:8000
      - 9229:9229
    networks:
      c-21-28_network: {}
    volumes:
      - ./src/back/api:/home/python/app
      - ./env/back/api:/home/python/app/venv
      - ./.data/tmp:/tmp
    env_file:
      - ./.env
    depends_on:
      c-21-28.postgres:
        condition: service_healthy 
    develop:
      watch:
        - action: sync
          path: ./src/back/api
          target: /home/python/app
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.50"
          memory: 512M

  c-21-28.postgres:
    container_name: c-21-28.postgres
    hostname: postgres
    restart: on-failure
    logging:
      options:
        max-size: 10m
        max-file: "3" 
    build:
      context: ./.data
      dockerfile: ../Dockerfile
      target: postgres
    ports: 
      - ${POSTGRES_PORT_IN}:${POSTGRES_PORT_OUT}/tcp
    networks:
      c-21-28_network: {}
    environment:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
        POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256" 
    volumes:
      - ./.data/psql:/var/lib/postgresql/data
      - ./.data/bck/psql:/home
      - ./.data/tmp:/tmp
    healthcheck:
      test: ['CMD','pg_isready','-q','-d','reservapp','-U','postgres']
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 55  
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.50"
          memory: 512M  

  c-21-28.pg4admin:
    build: 
      context: .
      dockerfile: Dockerfile
      target: pgadmin4
    hostname: pg4admin
    container_name: c-21-28.pg4admin
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - 8085:80
   # entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    user: root
    depends_on:
      - c-21-28.postgres
    #configs:
    #  - source: servers.json
    #    target: /pgadmin4/servers.json
    #  - source: pgpass
    #    target: /pgpass
    environment:
      - PGADMIN_DEFAULT_PASSWORD=1234 
      - PGADMIN_DEFAULT_EMAIL=user@pgadmin.com
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    volumes:
      - ./.data/psql:/var/lib/pg4admin
      - ./.data/tmp:/tmp  
    networks:
      c-21-28_network: {}
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 8G
        reservations:
          cpus: "1"
          memory: 4G